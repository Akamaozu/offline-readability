var webapp_routes = module.exports = require('express').Router(),
    
    path_to_client_dir = __dirname + '/../../../client';

// parse form submissions
  webapp_routes.use( require('body-parser').urlencoded({ extended: false }) );

// handle sessions
  webapp_routes.use( require('express-session')({

    secret: process.env.WEBAPP_SESSION_SECRET, 
    resave: false, 
    saveUninitialized: false, 
    cookie: { maxAge: 1000 * 60 * 30 }}) 
  );

// routes

  // main
    webapp_routes.get('/', function( req, res ){

      var React = require('react'),
          ReactDOMServer = require('react-dom/server'),

          home_layout = React.createElement( require('app/client/src/js/home-page'), {

            credentials_error: req.query.hasOwnProperty('bad-credentials'),
            server_error: req.query.hasOwnProperty('server-error')
          });

      res.render( path_to_client_dir + '/home.ejs', { react_server_render: ReactDOMServer.renderToString( home_layout ) });
    });

  // login
    webapp_routes.post('/login', function( req, res ){
    
      var readability = require('app/server/modules/readability');

      readability.login( req.body.user, req.body.pass, function( error, tokens ){

        if( error ){

          var error_string = error.toString();

          if( error_string.indexOf('HTTP 401') > -1 ) return res.redirect('/?bad-credentials');

          else return res.redirect('/?server-error');
        }

        req.session.auth = tokens;

        res.redirect('/bookmarks');
      });
    });

  // list bookmarks
    webapp_routes.get('/bookmarks/:page?', function( req, res ){

      if( !req.session.auth ) return res.redirect('/');
    
      var readability = require('app/server/modules/readability'),
          page = req.params.page || 1;

      readability.bookmarks( req.session.auth.oauth_token, req.session.auth.oauth_token_secret, { page: page }, function( error, response ){

        var React = require('react'),
            ReactDOMServer = require('react-dom/server'),
            index_layout = React.createElement( require('app/client/src/js/index-page'), {

              bookmarks: response.bookmarks,
              metadata: response.meta
            });       

        res.set('Content-Type', 'text/html; charset=utf-8');

        res.render( path_to_client_dir + '/index.ejs', { react_server_render: ReactDOMServer.renderToString( index_layout ) });
      });
    });

  // get article
    webapp_routes.get('/article/:id', function( req, res ){

      if( !req.session.auth ) return res.redirect('/');
    
      var readability = require('app/server/modules/readability'),
          task = require('cjs-task')();

      task.step('get article metadata', function(){

        readability.article( req.session.auth.oauth_token, req.session.auth.oauth_token_secret, req.params.id, function( error, article ){

          if( error || !article ) return task.end( error );

          task.set('article-metadata', article);
          task.next();
        });
      });

      task.step('get bookmark metadata', function(){

        var article = task.get('article-metadata');

        readability.bookmark.add( req.session.auth.oauth_token, req.session.auth.oauth_token_secret, article.url, function( error, bookmark ){

          if( error || !bookmark ) return task.end( error );

          task.set('bookmark-metadata', bookmark);
          task.next();
        });
      });

      task.callback( function( error ){

        if( error ) return res.redirect( 'back' );
        
        var article = task.get('article-metadata'),
            bookmark = task.get('bookmark-metadata'),

            React = require('react'),
            ReactDOMServer = require('react-dom/server'),
            article_layout = React.createElement( require('app/client/src/js/article-template'), {

              source_url: article.url,
              source_domain: article.domain,
              title: article.title,
              content: article.content,
              bookmark: bookmark
            });

        res.render( path_to_client_dir + '/article.ejs', { 
          
          article_title: article.title,
          react_server_render: ReactDOMServer.renderToString( article_layout )
        });
      });

      task.start();      
    });

  // delete bookmark
    webapp_routes.post('/bookmark/:id/unbookmark', function( req, res ){

      if( !req.session.auth ) return res.redirect('/');

      var readability = require('app/server/modules/readability');

      readability.bookmark.remove( req.session.auth.oauth_token, req.session.auth.oauth_token_secret, req.params.id, function( error, bookmark ){

        res.redirect('/bookmarks');
      });
    });

  // add bookmark to favorites 
    webapp_routes.post('/bookmark/:id/favorite', function( req, res ){

      if( !req.session.auth ) return res.redirect('/');

      var readability = require('app/server/modules/readability');

      readability.bookmark.favorite( req.session.auth.oauth_token, req.session.auth.oauth_token_secret, req.params.id, function( error, bookmark ){

        res.redirect('back');
      });
    });

  // remove bookmark from favorites
    webapp_routes.post('/bookmark/:id/unfavorite', function( req, res ){

      if( !req.session.auth ) return res.redirect('/');

      var readability = require('app/server/modules/readability');

      readability.bookmark.unfavorite( req.session.auth.oauth_token, req.session.auth.oauth_token_secret, req.params.id, function( error, bookmark ){

        res.redirect('back');
      });
    });

  // archive bookmark
    webapp_routes.post('/bookmark/:id/archive', function( req, res ){

      if( !req.session.auth ) return res.redirect('/');

      var readability = require('app/server/modules/readability');

      readability.bookmark.archive( req.session.auth.oauth_token, req.session.auth.oauth_token_secret, req.params.id, function( error, bookmark ){

        res.redirect('back');
      });
    });

  // unarchive bookmark
    webapp_routes.post('/bookmark/:id/unarchive', function( req, res ){

      if( !req.session.auth ) return res.redirect('/');

      var readability = require('app/server/modules/readability');

      readability.bookmark.unarchive( req.session.auth.oauth_token, req.session.auth.oauth_token_secret, req.params.id, function( error, bookmark ){

        res.redirect('back');
      });
    });

  // catch-all
    webapp_routes.use('*', function( req, res ){

      res.redirect('/');
    });