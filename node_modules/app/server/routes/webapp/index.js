var webapp_routes = module.exports = require('express').Router(),
    
    path_to_client_dir = __dirname + '/../../../client';

// parse form submissions
  webapp_routes.use( require('body-parser').urlencoded({ extended: false }) );

// handle sessions
  webapp_routes.use( require('express-session')({

    secret: process.env.WEBAPP_SESSION_SECRET, 
    resave: false, 
    saveUninitialized: false, 
    cookie: { maxAge: 1000 * 60 * 5 }}) 
  );

// routes

  // main
    webapp_routes.get('/', function( req, res ){

      var React = require('react'),
          ReactDOMServer = require('react-dom/server'),

          home_layout = React.createElement( require('app/client/src/js/home-page'), {

            credentials_error: req.query.hasOwnProperty('bad-credentials'),
            server_error: req.query.hasOwnProperty('server-error')
          });

      res.render( path_to_client_dir + '/home.ejs', { react_server_render: ReactDOMServer.renderToString( home_layout ) });
    });

  // login
    webapp_routes.post('/login', function( req, res ){
    
      var readability = require('app/server/modules/readability');

      readability.login( req.body.user, req.body.pass, function( error, tokens ){

        if( error ){

          var error_string = error.toString();

          if( error_string.indexOf('HTTP 401') ) return res.redirect('/?bad-credentials');

          else return res.redirect('/?server-error');
        }

        req.session.auth = tokens;

        res.redirect('/bookmarks');
      });
    });

  // list bookmarks
    webapp_routes.get('/bookmarks', function( req, res ){

      if( !req.session.auth ) return res.redirect('/');
    
      var readability = require('app/server/modules/readability');

      readability.bookmarks( req.session.auth.oauth_token, req.session.auth.oauth_token_secret, {}, function( error, response ){

        var React = require('react'),
            ReactDOMServer = require('react-dom/server'),
            index_layout = React.createElement( require('app/client/src/js/index-list-template'), {

              bookmarks: response.bookmarks,
              meta: response.meta,
              error: error
            });

        res.set('Content-Type', 'text/html; charset=utf-8');

        res.render( path_to_client_dir + '/index.ejs', { react_server_render: ReactDOMServer.renderToString( index_layout ) });
      });
    });