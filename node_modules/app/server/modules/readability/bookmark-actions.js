module.exports = function( readability ){
  
  return {

    get: get_bookmark,

    add: add_bookmark,
    
    remove: delete_bookmark,
    
    favorite: favorite_bookmark,

    unfavorite: unfavorite_bookmark,

    archive: archive_bookmark,

    unarchive: unarchive_bookmark
  };

  function get_bookmark( token, secret, id, callback ){

    if( !callback || typeof callback !== 'function' ){ callback = function(){}; }

    var reader = new readability.reader({

      access_token: token,
      access_token_secret: secret
    });

    reader.bookmark( id, function( error, bookmark ){

      callback( error, bookmark );
    });
  }

  function add_bookmark( token, secret, url, callback ){

    if( !callback || typeof callback !== 'function' ){ callback = function(){}; }

    var reader = new readability.reader({

      access_token: token,
      access_token_secret: secret
    });

    reader.addBookmark( url, function( error, bookmark ){

      callback( error, bookmark );
    });
  }

  function delete_bookmark( token, secret, id, callback ){

    if( !callback || typeof callback !== 'function' ){ callback = function(){}; }

    var reader = new readability.reader({

      access_token: token,
      access_token_secret: secret
    });

    reader.removeBookmark( id, function( error, is_removed ){

      callback( error, is_removed );
    });
  }

  function favorite_bookmark( token, secret, id, callback ){

    if( !callback || typeof callback !== 'function' ){ callback = function(){}; }

    get_bookmark( token, secret, id, function( error, bookmark ){

      if( error ) return callback( error );

      var reader = new readability.reader({

        access_token: token,
        access_token_secret: secret
      });
      
      reader.updateBookmark( id, { favorite: 1, archive: bookmark.archive }, function( error, bookmark ){

        callback( error, bookmark );
      });
    });
  }

  function unfavorite_bookmark( token, secret, id, callback ){

    if( !callback || typeof callback !== 'function' ){ callback = function(){}; }

    get_bookmark( token, secret, id, function( error, bookmark ){

      if( error ) return callback( error );

      var reader = new readability.reader({

        access_token: token,
        access_token_secret: secret
      });
      
      reader.updateBookmark( id, { favorite: 0, archive: bookmark.archive }, function( error, bookmark ){

        callback( error, bookmark );
      });
    });
  }

  function archive_bookmark( token, secret, id, callback ){

    if( !callback || typeof callback !== 'function' ){ callback = function(){}; }

    get_bookmark( token, secret, id, function( error, bookmark ){

      if( error ) return callback( error );

      var reader = new readability.reader({

        access_token: token,
        access_token_secret: secret
      });
      
      reader.updateBookmark( id, { archive: 1, favorite: bookmark.favorite }, function( error, bookmark ){

        callback( error, bookmark );
      });
    });
  }

  function unarchive_bookmark( token, secret, id, callback ){

    if( !callback || typeof callback !== 'function' ){ callback = function(){}; }

    get_bookmark( token, secret, id, function( error, bookmark ){

      if( error ) return callback( error );

      var reader = new readability.reader({

        access_token: token,
        access_token_secret: secret
      });
      
      reader.updateBookmark( id, { archive: 0, favorite: bookmark.favorite }, function( error, bookmark ){

        callback( error, bookmark );
      });
    });
  }
}