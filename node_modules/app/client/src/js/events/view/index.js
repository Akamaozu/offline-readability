module.exports = function( noticeboard ){

  noticeboard.watch('next-page', 'view:render-next-page', function( msg ){

    var url_to_render = msg.notice;

    noticeboard.notify('render-url', url_to_render, 'view:render-next-page');
  });

  noticeboard.watch('render-url', 'view:translate-url-to-next-view-request', function( msg ){

    var next_page_url = msg.notice,
        url_fragments;

    if( next_page_url.indexOf( window.location.origin ) === 0 ) next_page_url = next_page_url.replace( window.location.origin, ''); 

    url_fragments = next_page_url.split('/');

    if( url_fragments.length <= 1 ){

      return noticeboard.notify('next-view', { view: 'home' }, 'view:translate-url-to-next-view-request');
    }

    switch( url_fragments[1] ){

      case 'bookmarks':
      case 'favorites':
      case 'archives':

        var filter = url_fragments[1],
            page = url_fragments[2] || 1;

        return noticeboard.notify('next-view', {view: 'index', view_data: { filter: filter, page: page }}, 'view:translate-url-to-next-view-request');
      break;

      case 'article':

        var article_id = url_fragments[2];

        return noticeboard.notify('next-view', {view: 'article', view_data: { id: article_id }}, 'view:translate-url-to-next-view-request');
      break;
    }
  });

  noticeboard.watch('next-view', 'view:change-to-next-view', function( msg ){

    var next_view = msg.notice.view,
        next_view_data = msg.notice.view_data || {};

    noticeboard.notify('get-app-state', function( state ){

      var current_view = state.view,
          current_view_data = state.view_data;

      switch( next_view ){

        case 'index':

          var get_bookmarks = {};
              get_bookmarks.type = next_view_data.filter || 'bookmarks';
              get_bookmarks.page = next_view_data.page || 1;
              get_bookmarks.callback = function(){

                var has_executed = false;

                return function( data ){

                  if( has_executed ) return;

                  has_executed = true;

                  var React = require('react'),
                      ReactDOM = require('react-dom'),

                      index_layout = React.createElement( require('app/client/src/js/index-page'), {

                        bookmarks: data.bookmarks,
                        metadata: data.meta,
                        page: get_bookmarks.type
                      });

                  noticeboard.once('teardown-view', 'render-next-view', function(){

                    ReactDOM.render( index_layout, document.getElementById('main-wrapper'), function(){
                        
                      noticeboard.notify('update-app-state', {

                        last_view: current_view, 
                        last_view_data: current_view_data,

                        current_view: next_view,
                        current_view_data: next_view_data

                      }, 'view:change-to-next-view');

                      noticeboard.notify('new-view-rendered', { view: next_view, view_data: next_view_data, url: '/' + get_bookmarks.type + '/' + get_bookmarks.page }, 'view:change-to-next-view');

                      noticeboard.watch( 'bookmarks-pages-updated', 'view:sync-current-view-with-pages', function(){

                        noticeboard.notify('get-bookmarks-page', {

                          type: get_bookmarks.type,
                          page: get_bookmarks.page,
                          callback: function(){

                            var is_executed = false;

                            return function( data ){

                              if( is_executed ) return;

                              is_executed = true;

                              var React = require('react'),
                                  ReactDOM = require('react-dom'),

                                  index_layout = React.createElement( require('app/client/src/js/index-page'), {

                                    bookmarks: data.bookmarks,
                                    metadata: data.meta,
                                    page: get_bookmarks.type
                                  });
                              
                              ReactDOM.render( index_layout, document.getElementById('main-wrapper') );
                            }
                          }()
                        });
                      });

                      noticeboard.once('teardown-view', 'view:teardown-index-view', function(){

                        noticeboard.ignore('bookmarks-pages-updated', 'view:sync-current-view-with-pages');
                      });
                    });
                  });
                  
                  noticeboard.notify('teardown-view', null, 'view:change-to-next-view');
                }
              }();

          noticeboard.notify('get-bookmarks-page', get_bookmarks);

        break;

        case 'article':

          var get_article = {};
              get_article.id = next_view_data.id;
              get_article.callback = function(){

                var has_executed = false;

                return function( data ){

                  if( has_executed ) return;

                  var React = require('react'),
                      ReactDOM = require('react-dom'),

                      article_layout = React.createElement( require('app/client/src/js/article-template'), {

                        source_url: data.url,
                        source_domain: data.domain,
                        title: data.title,
                        content: data.content,
                        bookmark: {}
                      });

                  noticeboard.once('teardown-view', 'render-next-view', function(){

                    ReactDOM.render( article_layout, document.getElementById('main-wrapper'), function(){
                        
                      noticeboard.notify('update-app-state', {

                        last_view: current_view, 
                        last_view_data: current_view_data,

                        current_view: next_view,
                        current_view_data: next_view_data

                      }, 'view:change-to-next-view');

                      noticeboard.notify('new-view-rendered', { view: next_view, view_data: next_view_data, url: '/article/' + get_article.id }, 'view:change-to-next-view');
                    });
                  });
                  
                  noticeboard.notify('teardown-view', null, 'view:change-to-next-view');
                }
              }();

          noticeboard.notify('get-article', get_article);

        break;

        case 'home':
        default:

          var React = require('react'),
              ReactDOM = require('react-dom'),

              home_layout = React.createElement( require('app/client/src/js/home-page') );

          noticeboard.once('teardown-view', 'render-next-view', function(){

            ReactDOM.render( home_layout, document.getElementById('main-wrapper'), function(){
                
              noticeboard.notify('update-app-state', {

                last_view: current_view, 
                last_view_data: current_view_data,

                current_view: next_view,
                current_view_data: next_view_data

              }, 'view:change-to-next-view');

              noticeboard.notify('new-view-rendered', { view: next_view, url: '/'}, 'view:change-to-next-view');
            });
          });
          
          noticeboard.notify('teardown-view', null, 'view:change-to-next-view');
        break;
      }
    }, 'view:change-to-next-view');

  })
}